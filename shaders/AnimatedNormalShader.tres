[gd_resource type="VisualShader" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id=2]

[sub_resource type="VisualShaderNodeTexture" id=3]

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "normal_texture"

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_5;



void vertex() {
// Output:0

}

void fragment() {
// Input:2

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Input:6

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, UV.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// Output:0
	COLOR.rgb = n_out3p0;
	NORMAL = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -362, 91 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 500, 180 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -280, 240 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -60, 120 )
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( -60, 340 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( -340, 380 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 2, 6, 0, 5, 2, 5, 0, 0, 2, 3, 0, 0, 0 )
